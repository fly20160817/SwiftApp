## 用户设置

xcuserdata/





## 应用程序包装

*.ipa
*.dSYM.zip
*.dSYM





## Obj-C/Swift专用

*.hmap





## CocoaPods
##
## 我们建议不要将Pods目录添加到您的应用程序中，具体需要你自行判断。利弊如下：
## https://guides.cocoapods.org/using/using-cocoapods.html#should-i-check-the-pods-directory-into-source-control

# Pods/





## Carthage (carthage是一个和cocopods类似的第三方库管理工具)

## 如果要避免签入来自Carthage依赖项的源代码，请添加此行。
# Carthage/Checkouts
Carthage/Build/





## fastlane (Fastlane是一套使用Ruby写的自动化工具集，旨在简化Android和iOS的部署过程，自动化你的工作流。它可以简化一些乏味、单调、重复的工作，像截图、代码签名以及发布App)
##
## 建议不要将截图存储在git中。
## 使用fastlane在需要时重新生成屏幕截图。
## 有关设置建议的更多信息，请访问：
## https://docs.fastlane.tools/best-practices/source-control/#source-control

fastlane/report.xml
fastlane/Preview.html
fastlane/screenshots/**/*.png
fastlane/test_output





## Code Injection (代码注入)
##
## 在使用新的代码注入工具之后，将生成一个文件夹/iOSInjectionProject
## https://github.com/johnno1962/injectionforxcode

iOSInjectionProject/





## 如果要避免从Xcode工作区签入源代码，请添加此行

# *.xcworkspace





##### 下面是Swift项目需要额外添加的 #####





## Playgrounds

timeline.xctimeline
playground.xcworkspace





## Swift Package Manager (它是一个和cocopods类似的第三方库管理工具)

## 如果希望避免签入来自Swift Package Manager依赖项的源代码，请添加此行。
# Packages/
# Package.pins
# Package.resolved
# *.xcodeproj





## Xcode会自动生成.xcworkspacedata文件和xcuserdata文件
## 因此，除非您已经将包配置文件添加到项目中，否则不需要它

# .swiftpm





## build文件

.build/





# Accio dependency management
Dependencies/
.accio/





